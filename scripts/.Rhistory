filter(!is.na(blink_type)) %>%
# convert UTC to relative timestamp in s
mutate(start_timestamp_s = (start_timestamp_ns - recording_begin)/(10^9), end_timestamp_s = (end_timestamp_ns - recording_begin)/(10^9)) %>%
# select relevant columns
select(id, participant, start_timestamp_s, end_timestamp_s, duration_ms, blink_type) %>%
# add column to identify pupil blinks
mutate(blink_source = "pupil_manual")
View(pupil_manual_comparison_ts)
full_comparison <- bind_rows(manual_comparison_ts, pupil_comparison_ts, pupil_manual_comparison_ts) %>%
# group by blink source, pt id, and blink type
group_by(blink_source, id, blink_type) %>%
# count blinks for each pt by task section and blink source
summarise(blink_count = n()) %>%
# pivot wider, one row per pt per task section
pivot_wider(names_from = blink_source, values_from = blink_count)
View(full_comparison)
# combine manual and pupil blinks into one table
full_comparison <- bind_rows(manual_comparison_ts, pupil_comparison_ts, pupil_manual_comparison_ts) %>%
# group by blink source, pt id, and blink type
group_by(blink_source, id, blink_type) %>%
# count blinks for each pt by task section and blink source
summarise(blink_count = n()) %>%
# pivot wider, one row per pt per task section
pivot_wider(names_from = blink_source, values_from = blink_count) %>%
# write to csv
write_csv("blink_comparison.csv")
write_csv(pupil_manual_comparison_ts, "manual export timestamps.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tibble)
# list blink files
file_paths_manual_export <- list.files("data/raw/blinks from manual export", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_manual_export <- tibble()
# list blink files
file_paths_manual_export <- list.files("tsst_anxiety_blinking/data/raw/blinks from manual export", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# list blink files
file_paths_manual_export <- list.files("data/raw/blinks from manual export", full.names = TRUE, recursive = TRUE)
# list blink files
file_paths_manual_export <- list.files("tsst_anxiety_blinking/data/raw/blinks from manual export", full.names = TRUE, recursive = TRUE)
# list blink files
file_paths_manual_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", full.names = TRUE, recursive = TRUE)
# list blink files
file_paths_manual_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", full.names = FALSE, recursive = TRUE)
# loop through files and process
for (file_path in file_paths_manual_export) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
# Add the ID and pt columns
data$id <- sub("*export/", "", id) # remove everything before the /
# loop through files and process
for (file_path in file_paths_manual_export) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
# list blink files
file_paths_manual_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", full.names = TRUE, recursive = TRUE)
# loop through files and process
for (file_path in file_paths_manual_export) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
View(pupil_manual_export)
# loop through files and process
for (file_path in file_paths_manual_export) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
# loop through files and process
for (file_path in file_paths_manual_export) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "/"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
# loop through files and process
for (file_path in file_paths_manual_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/"))
file_name_parts <- file_name_parts[10]
# split file name into id and participant values
file_name_parts <- unlist(strsplit(file_name_parts, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
file_paths_manual_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_manual_export <- tibble()
# loop through files and process
for (file_path in file_paths_manual_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/"))
file_name_parts <- file_name_parts[10]
# split file name into id and participant values
file_name_parts <- unlist(strsplit(file_name_parts, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
# clean names
pupil_manual_export <- janitor::clean_names(pupil_manual_export)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tibble)
# list blink files
file_paths_manual_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_manual_export <- tibble()
# loop through files and process
for (file_path in file_paths_manual_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/"))
file_name_parts <- file_name_parts[10]
# split file name into id and participant values
file_name_parts <- unlist(strsplit(file_name_parts, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
# clean names
pupil_manual_export <- janitor::clean_names(pupil_manual_export)
# list blink files
file_paths_pupil_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
file_paths_pupil_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_cloud_export <- tibble()
# list blink files
file_paths_pupil_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# list blink files
file_paths_pupil_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# loop through files and process
for (file_path in file_paths_pupil_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/"))
file_name_parts <- file_name_parts[10:11]
# split file name into id and participant values
file_name_parts <- unlist(strsplit(file_name_parts, split = "-|_"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_cloud_export <- bind_rows(pupil_cloud_export, data)
}
}
View(pupil_cloud_export)
# list blink files
file_paths_r56_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/R56", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_r56_export <- tibble()
# loop through files and process
for (file_path in file_paths_r56_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/|-"))
id <- file_name_parts[10]
participant <- file_name_parts[11]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*/R56/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_r56_export <- bind_rows(pupil_r56_export, data)
}
}
View(pupil_r56_export)
# loop through files and process
for (file_path in file_paths_r56_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/|-"))
id <- file_name_parts[9]
participant <- file_name_parts[10]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*/R56/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_r56_export <- bind_rows(pupil_r56_export, data)
}
}
# create empty df to hold blinks
pupil_r56_export <- tibble()
# loop through files and process
for (file_path in file_paths_r56_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/|-"))
id <- file_name_parts[9]
participant <- file_name_parts[10]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*/R56/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_r56_export <- bind_rows(pupil_r56_export, data)
}
}
# create empty df to hold blinks
pupil_r56_export <- tibble()
# loop through files and process
for (file_path in file_paths_r56_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/|-"))
id <- file_name_parts[11]
participant <- file_name_parts[12]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*/R56/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_r56_export <- bind_rows(pupil_r56_export, data)
}
}
# list blink files
file_paths_manual_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_manual_export <- tibble()
# loop through files and process
for (file_path in file_paths_manual_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/"))
file_name_parts <- file_name_parts[10]
# split file name into id and participant values
file_name_parts <- unlist(strsplit(file_name_parts, split = "-"))
id <- file_name_parts[1]
participant <- file_name_parts[2]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from manual export/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_manual_export <- bind_rows(pupil_manual_export, data)
}
}
# clean names
pupil_manual_export <- janitor::clean_names(pupil_manual_export)
View(pupil_manual_export)
# list event files
file_paths_r56_events <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/R56", pattern = "events.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold timestamps
pupil_r56_timestamps <- tibble()
# loop through files and process
for (file_path in file_paths_r56_events) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "/|-"))
id <- file_name_parts[11]
participant <- file_name_parts[12]
# check if file exists before attempting to read
if (file.exists(file_path)) {
# read the events.csv file
data <- read_csv(file_path, col_types = cols())
# add the ID and pt columns
data$id <- sub("*/R56/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# merge into main df
pupil_r56_timestamps <- bind_rows(pupil_r56_timestamps, data)
}
}
View(pupil_r56_timestamps)
# remove event type columns
pupil_r56_timestamps <- select(pupil_r56_timestamps, 1:3, 5:6) %>%
# pivot the timestamps wider, one row per pt
pivot_wider(names_from = name, values_from = "timestamp [ns]") %>%
# clean names
janitor::clean_names()
# list blink files
file_paths_r56_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/R56", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_r56_export <- tibble()
# loop through files and process
for (file_path in file_paths_r56_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/|-"))
id <- file_name_parts[11]
participant <- file_name_parts[12]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*/R56/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_r56_export <- bind_rows(pupil_r56_export, data)
}
}
# clean names
pupil_r56_export <- janitor::clean_names(pupil_r56_export)
# repeat above steps to generate TSST timestamp df
# list event files
file_paths_r56_events <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/R56", pattern = "events.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold timestamps
pupil_r56_timestamps <- tibble()
# loop through files and process
for (file_path in file_paths_r56_events) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "/|-"))
id <- file_name_parts[11]
participant <- file_name_parts[12]
# check if file exists before attempting to read
if (file.exists(file_path)) {
# read the events.csv file
data <- read_csv(file_path, col_types = cols())
# add the ID and pt columns
data$id <- sub("*/R56/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# merge into main df
pupil_r56_timestamps <- bind_rows(pupil_r56_timestamps, data)
}
}
# remove event type columns
pupil_r56_timestamps <- select(pupil_r56_timestamps, 1:3, 5:6) %>%
# pivot the timestamps wider, one row per pt
pivot_wider(names_from = name, values_from = "timestamp [ns]") %>%
# clean names
janitor::clean_names()
View(pupil_r56_export)
# add timestamps to pupil_r56_export
pupil_r56_export_ts <- left_join(pupil_r56_export, pupil_r56_timestamps, join_by(id == id, participant == participant, recording_id == recording_id)) %>%
# categorize blinks into different task sections
mutate(blink_type = case_when(
start_timestamp_ns >= pprep_start & end_timestamp_ns <= pprep_end ~ "pprep",
start_timestamp_ns >= pspeech_start & end_timestamp_ns <= pspeech_end ~ "pspeech",
start_timestamp_ns >= cprep_start & end_timestamp_ns <= cprep_end ~ "cprep",
start_timestamp_ns >= cspeech_start & end_timestamp_ns <= cspeech_end ~ "cspeech",
.default = NA
)) %>%
# remove blinks outside of task sections
filter(!is.na(blink_type)) %>%
# convert UTC to relative timestamp in s
mutate(start_timestamp_s = (start_timestamp_ns - recording_begin)/(10^9), end_timestamp_s = (end_timestamp_ns - recording_begin)/(10^9)) %>%
# select relevant columns
select(id, participant, start_timestamp_s, end_timestamp_s, duration_ms, blink_type)
View(pupil_r56_export_ts)
# list blink files
file_paths_r56_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/R01", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_r01_export <- tibble()
# loop through files and process
for (file_path in file_paths_r01_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/|_"))
id <- file_name_parts[13]
participant <- file_name_parts[14]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*/R01/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_r01_export <- bind_rows(pupil_r01_export, data)
}
}
# list blink files
file_paths_r01_export <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/R01", pattern = "blinks.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold blinks
pupil_r01_export <- tibble()
# loop through files and process
for (file_path in file_paths_r01_export) {
# get rid of file path
file_name_parts <- unlist(strsplit(file_path, split = "/|_"))
id <- file_name_parts[13]
participant <- file_name_parts[14]
# Check if the file exists before attempting to read
if (file.exists(file_path)) {
# read the blinks.csv file
data <- read_csv(file_path, col_types = cols())
# Add the ID and pt columns
data$id <- sub("*/R01/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# Merge this file's data into the main dataframe
pupil_r01_export <- bind_rows(pupil_r01_export, data)
}
}
# clean names
pupil_r01_export <- janitor::clean_names(pupil_r01_export)
# repeat above steps to generate TSST timestamp df
# list event files
file_paths_r01_events <- list.files("~/GitHub/tsst_anxiety_blinking/data/raw/blinks from pupil cloud/R01", pattern = "events.csv", full.names = TRUE, recursive = TRUE)
# create empty df to hold timestamps
pupil_r01_timestamps <- tibble()
# loop through files and process
for (file_path in file_paths_r01_events) {
# add ID and pt columns from folder names
file_name_parts <- unlist(strsplit(file_path, split = "/|_"))
id <- file_name_parts[13]
participant <- file_name_parts[14]
# check if file exists before attempting to read
if (file.exists(file_path)) {
# read the events.csv file
data <- read_csv(file_path, col_types = cols())
# add the ID and pt columns
data$id <- sub("*/R01/", "", id) # remove everything before the /
data$participant <- sub("_.*", "", participant)  # Remove everything after the underscore
# merge into main df
pupil_r01_timestamps <- bind_rows(pupil_r01_timestamps, data)
}
}
# remove event type columns
pupil_r01_timestamps <- select(pupil_r01_timestamps, 1:3, 5:6) %>%
# pivot the timestamps wider, one row per pt
pivot_wider(names_from = name, values_from = "timestamp [ns]") %>%
# clean names
janitor::clean_names()
View(pupil_r01_timestamps)
